apiVersion: v1
kind: Service
metadata:
  name: backstage
  namespace: backstage
spec:
  selector:
    app: backstage
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: backend
      port: 7007
      targetPort: 7007
      protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backstage-ingress
  namespace: backstage
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  ingressClassName: nginx
  rules:
    - host: example.com
      http:
        paths:
          - path: /api/auth/github/handler/frame
            pathType: ImplementationSpecific
            backend:
              service:
                name: backstage
                port:
                  number: 7007  # Assuming this is the OAuth callback port
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backstage
                port:
                  number: 7007  # Assuming this is the main application port
  tls:
    - hosts:
        - "example.com"
      secretName: example-tls


---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: example-certificate
  namespace: backstage
spec:
  secretName: example-tls
  dnsNames:
    - example.com
  issuerRef:
    name: letsencrypt-prod
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: ClusterIssuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: "https://acme-v02.api.letsencrypt.org/directory"
    email: "mail@gmail.com"
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
      - http01:
          ingress:
            class: nginx

---
